- for post in posts
  %hr
  .blog_post
    %h3= link_to(post.title, post_path(:id => post.shorthand))
    %p.post_date= l(post.created_at, :format => :short)
    = render('/partials/blog_post_tags', :post_tags => post.post_tags)
    = Blog::PostService.sanitized_blog_content(post, false)
    - if post.content.include?(Setting.post_more_separator)
      %p= link_to(t('.read_more'), "#{post_path(:id => post.shorthand, :anchor => "more-#{post.id}")}")
    .blog_post_comment_count
      - if Setting.disqus_shortname.blank?
        - if post.post_comments.ham.count == 1
          = link_to(t('.number_of_comments.one'), post_path(:id => post.shorthand, :anchor => 'comments'))
        - elsif post.post_comments.ham.count > 0
          = link_to(t('.number_of_comments.other', :number_of_comments => post.post_comments.ham.count), post_path(:id => post.shorthand, :anchor => 'comments'))
        - else
          = link_to(t('.number_of_comments.zero'), post_path(:id => post.shorthand, :anchor => 'comments'))
      - else
        = link_to(t('.comment'), post_path(:id => post.shorthand, :anchor => 'comments'))
  - if user_signed_in?
    .management_functionality
      %p
        = link_to(t('.edit_post'), edit_post_path(:id => post.id))
        = link_to(t('.destroy_post'), post_path(:id => post.id), :data => {:confirm => t('.destroy_confirmation')}, :method => :delete)

- if user_signed_in?
  .management_functionality
    %p= link_to(I18n.t('.new_post'), new_post_path)
